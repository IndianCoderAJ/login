{"ast":null,"code":"let hostname = 'http://localhost:8081';\nexport const userService = {\n  register\n};\n\nlet register = user => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`${hostname}/users/signup`, requestOptions).then(handleResponse);\n};\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {// auto logout if 401 response returned from api\n        //logout();\n        //location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["/home/akshay/Desktop/Reactjs/simple-login/src/_services/user.service.js"],"names":["hostname","userService","register","user","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","response","text","data","parse","ok","status","error","message","statusText","Promise","reject"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,uBAAf;AAEA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA;AADuB,CAApB;;AAIP,IAAKA,QAAQ,GAAIC,IAAD,IAAS;AACrB,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHa,GAAvB;AAMA,SAAOO,KAAK,CAAE,GAAEV,QAAS,eAAb,EAA6BI,cAA7B,CAAL,CAAkDO,IAAlD,CAAuDC,cAAvD,CAAP;AACH,CARD;;AAUA,SAASA,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBH,IAAhB,CAAqBG,IAAI,IAAI;AAChC,UAAMC,IAAI,GAAGD,IAAI,IAAIN,IAAI,CAACQ,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B,CACzB;AACA;AACA;AACH;;AAED,YAAMC,KAAK,GAAIJ,IAAI,IAAIA,IAAI,CAACK,OAAd,IAA0BP,QAAQ,CAACQ,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AAED,WAAOJ,IAAP;AACH,GAdM,CAAP;AAeH","sourcesContent":["let hostname = 'http://localhost:8081';\n\nexport const userService = { \n    register\n}\n\nlet  register = (user)=> {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${hostname}/users/signup`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                //logout();\n                //location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}\n"]},"metadata":{},"sourceType":"module"}