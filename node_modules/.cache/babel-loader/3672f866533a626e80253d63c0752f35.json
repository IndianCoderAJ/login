{"ast":null,"code":"var _jsxFileName = \"/home/akshay/Desktop/Reactjs/simple-login/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { alertActions } from './_actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      console.log(\"on route change\");\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  render() {\n    const {\n      alert\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-8 col-sm-offset-2\",\n          children: [alert.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `alert ${alert.type}`,\n            children: alert.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.props.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction mapState(state) {\n  const {\n    alert\n  } = state;\n  return {\n    alert\n  };\n}\n\nconst actionCreators = {\n  clearAlerts: alertActions.clear\n};\nconst connectedApp = connect(mapState, actionCreators)(App);\nexport { connectedApp as App };","map":{"version":3,"sources":["/home/akshay/Desktop/Reactjs/simple-login/src/App.js"],"names":["React","Component","connect","alertActions","App","constructor","props","componentWillMount","unlisten","history","listen","location","action","console","log","componentWillUnmount","render","alert","message","type","children","mapState","state","actionCreators","clearAlerts","clear","connectedApp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAMA,MAAMC,GAAN,SAAkBJ,KAAK,CAACC,SAAxB,CAAkC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,QAAL,GAAgB,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,MAAnB,CAA0B,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAC9DC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAFe,CAAhB;AAGD;;AACDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKP,QAAL;AACH;;AAGHQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKX,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,qBACKW,KAAK,CAACC,OAAN,iBACG;AAAK,YAAA,SAAS,EAAG,SAAQD,KAAK,CAACE,IAAK,EAApC;AAAA,sBAAwCF,KAAK,CAACC;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAFR,eAIK;AAAA,sBAAM,KAAKZ,KAAL,CAAWc;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AA7B6B;;AAgClC,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEL,IAAAA;AAAF,MAAYK,KAAlB;AACA,SAAO;AAAEL,IAAAA;AAAF,GAAP;AACH;;AAED,MAAMM,cAAc,GAAG;AACnBC,EAAAA,WAAW,EAAErB,YAAY,CAACsB;AADP,CAAvB;AAIA,MAAMC,YAAY,GAAGxB,OAAO,CAACmB,QAAD,EAAWE,cAAX,CAAP,CAAkCnB,GAAlC,CAArB;AACA,SAASsB,YAAY,IAAItB,GAAzB","sourcesContent":["import React, { Component } from 'react'\n\nimport { connect } from 'react-redux';\nimport { alertActions } from './_actions';\n\n\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        this.unlisten = this.props.history.listen((location, action) => {\n          console.log(\"on route change\");\n        });\n      }\n      componentWillUnmount() {\n          this.unlisten();\n      }\n   \n\n    render() {\n        const { alert } = this.props;\n        return (\n            <div className=\"jumbotron\">\n                <div className=\"container\">\n                    <div className=\"col-sm-8 col-sm-offset-2\">\n                        {alert.message && \n                            <div className={`alert ${alert.type}`}>{alert.message}</div>\n                        }\n                         <div>{this.props.children}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapState(state) {\n    const { alert } = state;\n    return { alert };\n}\n\nconst actionCreators = {\n    clearAlerts: alertActions.clear\n};\n\nconst connectedApp = connect(mapState, actionCreators)(App);\nexport { connectedApp as App };\n\n"]},"metadata":{},"sourceType":"module"}