{"ast":null,"code":"import{userService}from'../_services';import{alertActions}from'./';import{clearError,userConstants,loaderConstant,forgotpassConstant}from'../_constants';function register(user,history){return function(dispatch){dispatch({type:loaderConstant.LOADINGTRUE});userService.register(user).then(function(user){dispatch({type:loaderConstant.LOADINGFALSE});dispatch(success());dispatch(alertActions.success('Registration successful'));clearError(dispatch);history.push('/login');}).catch(function(error){dispatch({type:loaderConstant.LOADINGFALSE});if(error.message==='Network Error'){dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));clearError(dispatch);return;}dispatch(alertActions.error(error.response.data.error));clearError(dispatch);});};function success(user){return{type:userConstants.REGISTER_SUCCESS,user:user};}}function getEmailValid(email){return function(dispatch){userService.getEmailValid(email).then(function(response){dispatch(emailCheck(response.data.emailTaken));}).catch(function(error){if(error.message==='Network Error'){dispatch(failure(\"Somthing went wrong please try again in sometime.\"));dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));clearError(dispatch);return;}dispatch(emailCheck(false));});};function emailCheck(emailTaken){return{type:userConstants.EMAIL_TAKEN,emailTaken:emailTaken};}function failure(error){return{type:userConstants.REGISTER_FAILURE,error:error};}}function login(data,history){return function(dispatch){dispatch({type:loaderConstant.LOADINGTRUE});userService.login(data).then(function(response){dispatch({type:loaderConstant.LOADINGFALSE});//set token to local storeage.\nlocalStorage.setItem('user-auth',response.data.accessToken);dispatch(setUser(response.data.data));history.push('/');}).catch(function(error){dispatch({type:loaderConstant.LOADINGFALSE});if(error.message==='Network Error'){dispatch(failure(\"Somthing went wrong please try again in sometime.\"));dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));clearError(dispatch);return;}dispatch(alertActions.error(error.response.data.error));clearError(dispatch);});};function setUser(data){return{type:userConstants.SET_USERDATA,data:data};}function failure(error){return{type:userConstants.REGISTER_FAILURE,error:error};}}function logout(history){return function(dispatch){// remove token...\ndispatch(logoutDispatch());localStorage.removeItem(\"user-auth\");history.push('/login');};function logoutDispatch(data){return{type:userConstants.LOGOUT_USER};}}function changePass(data,history){return function(dispatch){dispatch({type:loaderConstant.LOADINGTRUE});userService.changePassword(data).then(function(response){dispatch(alertActions.success(response.data.message));dispatch({type:loaderConstant.LOADINGFALSE});clearError(dispatch);history.push('/');}).catch(function(error){dispatch({type:loaderConstant.LOADINGFALSE});if(error.response&&error.response.status===401){dispatch(logoutDispatch());unauthorized(history);}if(error.message==='Network Error'){dispatch(failure(\"Somthing went wrong please try again in sometime.\"));dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));clearError(dispatch);return;}dispatch(alertActions.error(error.response.data.error));clearError(dispatch);});};function failure(error){return{type:userConstants.REGISTER_FAILURE,error:error};}function logoutDispatch(data){return{type:userConstants.LOGOUT_USER};}}function getOTP(data,history){return function(dispatch){dispatch({type:loaderConstant.LOADINGTRUE});userService.getOPT(data).then(function(response){dispatch({type:loaderConstant.LOADINGFALSE});dispatch(alertActions.success(response.data.message));data.OTP=response.data.OTP;dispatch({type:forgotpassConstant.STEP_ONE,data:data});clearError(dispatch);history.push('/optVerification');}).catch(function(error){dispatch({type:loaderConstant.LOADINGFALSE});if(error.message==='Network Error'){dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));clearError(dispatch);return;}dispatch(alertActions.error(error.response.data.error));clearError(dispatch);});};}function otpVerification(data,history){return function(dispatch){userService.otpVerification(data).then(function(response){var token=response.data.token;dispatch({type:forgotpassConstant.STEP_TWO,token:token});history.push('/newpassword');}).catch(function(error){dispatch({type:loaderConstant.LOADINGFALSE});if(error.message==='Network Error'){dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));clearError(dispatch);return;}dispatch(alertActions.error(error.response.data.error));clearError(dispatch);});};}function resetPassword(data,history){return function(dispatch){dispatch({type:loaderConstant.LOADINGTRUE});userService.resetPassword(data).then(function(){dispatch({type:loaderConstant.LOADINGFALSE});dispatch({type:forgotpassConstant.CLEAR});dispatch(alertActions.success('Password Reset successful.'));clearError(dispatch);history.push('/');}).catch(function(error){dispatch({type:loaderConstant.LOADINGFALSE});if(error.message==='Network Error'){dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));clearError(dispatch);return;}// console.log(error.response.status);\ndispatch(alertActions.error(error.response.error));clearError(dispatch);});};}function unauthorized(history){localStorage.removeItem(\"user-auth\");history.push('/login');return;}function setCurrentUser(data){return{type:userConstants.SET_CURRENTUSER,data:data};}export var userActions={register:register,getEmailValid:getEmailValid,login:login,setCurrentUser:setCurrentUser,logout:logout,changePass:changePass,getOTP:getOTP,otpVerification:otpVerification,resetPassword:resetPassword};","map":{"version":3,"sources":["/home/akshay/Desktop/Reactjs/simple-login/src/_actions/user.actions.js"],"names":["userService","alertActions","clearError","userConstants","loaderConstant","forgotpassConstant","register","user","history","dispatch","type","LOADINGTRUE","then","LOADINGFALSE","success","push","catch","error","message","response","data","REGISTER_SUCCESS","getEmailValid","email","emailCheck","emailTaken","failure","EMAIL_TAKEN","REGISTER_FAILURE","login","localStorage","setItem","accessToken","setUser","SET_USERDATA","logout","logoutDispatch","removeItem","LOGOUT_USER","changePass","changePassword","status","unauthorized","getOTP","getOPT","OTP","STEP_ONE","otpVerification","token","STEP_TWO","resetPassword","CLEAR","setCurrentUser","SET_CURRENTUSER","userActions"],"mappings":"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","sourcesContent":["import { userService } from '../_services';\nimport { alertActions } from './';\nimport { clearError, userConstants,loaderConstant, forgotpassConstant } from '../_constants';\n\n\n\nfunction register(user,history) {\n    return dispatch => {\n        dispatch({type:loaderConstant.LOADINGTRUE}) \n        userService.register(user)\n            .then(\n                (user) => { \n                    dispatch({type:loaderConstant.LOADINGFALSE}) \n                    dispatch(success());\n                    dispatch(alertActions.success('Registration successful'));\n                    clearError(dispatch);\n                    history.push('/login')\n                },\n              \n            ).catch(\n                  (error) => {\n                    dispatch({type:loaderConstant.LOADINGFALSE}) \n                    if(error.message === 'Network Error'){\n                        dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));\n                        clearError(dispatch);\n                       return ;\n                    }\n    \n                    dispatch(alertActions.error(error.response.data.error));\n                    clearError(dispatch);\n                });\n        \n    }; \n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, user } }\n}\n\nfunction getEmailValid(email){\n    return dispatch => {\n        userService.getEmailValid(email)\n            .then(\n                (response) => { \n                    dispatch(emailCheck(response.data.emailTaken))\n                }\n            ).catch(\n                  (error) => {\n                    if(error.message === 'Network Error'){\n                        dispatch(failure(\"Somthing went wrong please try again in sometime.\"))\n                        dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));\n                        clearError(dispatch);\n                       return ;\n                    }\n                    dispatch(emailCheck(false))\n            });\n        \n    };\n\n    function emailCheck(emailTaken) { return { type: userConstants.EMAIL_TAKEN, emailTaken } }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction login(data,history){\n    return dispatch => {\n        dispatch({type:loaderConstant.LOADINGTRUE}) \n        userService.login(data)\n        .then((response) => {\n        dispatch({type:loaderConstant.LOADINGFALSE}) \n        //set token to local storeage.\n        localStorage.setItem('user-auth',response.data.accessToken)\n        dispatch(setUser(response.data.data))\n        history.push('/')\n        }).catch((error) => {\n            dispatch({type:loaderConstant.LOADINGFALSE}) \n            if(error.message === 'Network Error'){\n                dispatch(failure(\"Somthing went wrong please try again in sometime.\"))\n                dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));\n                clearError(dispatch);\n               return ;\n            }\n            dispatch(alertActions.error(error.response.data.error));\n            clearError(dispatch);\n        })\n    }\n    function setUser(data) { return { type: userConstants.SET_USERDATA,data} } \n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n}\n\nfunction logout(history){\n return dispatch => {    \n    // remove token...\n     dispatch(logoutDispatch()) \n     localStorage.removeItem(\"user-auth\");\n     history.push('/login')\n    \n}\n  function logoutDispatch(data) { return { type: userConstants.LOGOUT_USER} } \n}\n\nfunction changePass(data,history){\n    return dispatch => {   \n        dispatch({type:loaderConstant.LOADINGTRUE}) \n        userService.changePassword(data)\n         .then(response => {\n            dispatch(alertActions.success(response.data.message));\n            dispatch({type:loaderConstant.LOADINGFALSE}) \n            clearError(dispatch);\n            history.push('/')\n         }).catch((error)=>{\n            dispatch({type:loaderConstant.LOADINGFALSE})\n            if(error.response && error.response.status === 401){\n              dispatch(logoutDispatch()) \n              unauthorized(history);\n            } \n            if(error.message === 'Network Error'){\n                dispatch(failure(\"Somthing went wrong please try again in sometime.\"))\n                dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));\n                clearError(dispatch);\n               return ;\n            }\n            dispatch(alertActions.error(error.response.data.error));\n            clearError(dispatch);\n         })\n    }\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, error } }\n    function logoutDispatch(data) { return { type: userConstants.LOGOUT_USER} } \n}\n\nfunction getOTP (data,history) {\n    return dispatch => { \n        dispatch({type:loaderConstant.LOADINGTRUE}) \n        userService.getOPT(data)\n        .then(response => {\n            dispatch({type:loaderConstant.LOADINGFALSE}) \n            dispatch(alertActions.success(response.data.message));\n            data.OTP = response.data.OTP\n            dispatch({type:forgotpassConstant.STEP_ONE,data})\n            clearError(dispatch);\n            history.push('/optVerification')\n        }).catch(error => {\n            dispatch({type:loaderConstant.LOADINGFALSE}) \n            if(error.message === 'Network Error'){\n                dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));\n                clearError(dispatch);\n               return ;\n            }\n            dispatch(alertActions.error(error.response.data.error));\n            clearError(dispatch);\n        })\n    }\n}\n\nfunction otpVerification (data,history) {\n    return dispatch => {\n        userService.otpVerification(data)\n        .then(response => {\n            let token = response.data.token\n          dispatch({type:forgotpassConstant.STEP_TWO,token})\n            history.push('/newpassword')\n        }).catch(error => {\n            dispatch({type:loaderConstant.LOADINGFALSE}) \n            if(error.message === 'Network Error'){\n                dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));\n                clearError(dispatch);\n               return ;\n            }\n            dispatch(alertActions.error(error.response.data.error));\n            clearError(dispatch);\n        })\n    }\n}\n\nfunction resetPassword (data,history){\n    return dispatch => {\n        dispatch({type:loaderConstant.LOADINGTRUE}) \n        userService.resetPassword(data)\n         .then(() => {\n            dispatch({type:loaderConstant.LOADINGFALSE}) \n            dispatch({type:forgotpassConstant.CLEAR})\n            dispatch(alertActions.success('Password Reset successful.'));\n            clearError(dispatch);\n            history.push('/')\n         }).catch(error => {\n            dispatch({type:loaderConstant.LOADINGFALSE}) \n            if(error.message === 'Network Error'){\n                dispatch(alertActions.error('Somthing went wrong please try again in sometime.'));\n                clearError(dispatch);\n               return ;\n            }\n            // console.log(error.response.status);\n            dispatch(alertActions.error(error.response.error));\n            clearError(dispatch); \n         })\n    }\n}\n\nfunction unauthorized (history) {  \n         localStorage.removeItem(\"user-auth\");\n         history.push('/login')\n         return;\n}\n\nfunction setCurrentUser(data) {\n    return { type:userConstants.SET_CURRENTUSER,data}\n  }\nexport const userActions = { \n    register,\n    getEmailValid,\n    login,\n    setCurrentUser,\n    logout,\n    changePass,\n    getOTP,\n    otpVerification,\n    resetPassword\n}"]},"metadata":{},"sourceType":"module"}