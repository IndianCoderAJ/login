{"ast":null,"code":"let hostname = 'http://localhost:8081';\n\nlet register = user => {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`${hostname}/users/signup`, requestOptions).then(handleResponse);\n};\n\nfunction handleResponse(response) {\n  return response.then(text => {\n    debugger;\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nexport const userService = {\n  register\n};","map":{"version":3,"sources":["/home/akshay/Desktop/Reactjs/simple-login/src/_services/user.service.js"],"names":["hostname","register","user","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","response","text","data","parse","ok","error","message","statusText","Promise","reject","userService"],"mappings":"AAAA,IAAIA,QAAQ,GAAG,uBAAf;;AAGA,IAAIC,QAAQ,GAAIC,IAAD,IAAU;AACrB,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHa,GAAvB;AAMA,SAAOO,KAAK,CAAE,GAAET,QAAS,eAAb,EAA6BG,cAA7B,CAAL,CAAkDO,IAAlD,CAAuDC,cAAvD,CAAP;AACH,CARD;;AAUA,SAASA,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACF,IAAT,CAAcG,IAAI,IAAI;AACzB;AACA,UAAMC,IAAI,GAAGD,IAAI,IAAIN,IAAI,CAACQ,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AACd,YAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BN,QAAQ,CAACO,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,WAAOH,IAAP;AACH,GARM,CAAP;AASH;;AAED,OAAO,MAAMQ,WAAW,GAAG;AACvBrB,EAAAA;AADuB,CAApB","sourcesContent":["let hostname = 'http://localhost:8081';\n\n\nlet register = (user) => {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${hostname}/users/signup`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.then(text => {\n        debugger;\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n        return data;\n    });\n}\n\nexport const userService = {\n    register,\n};\n"]},"metadata":{},"sourceType":"module"}